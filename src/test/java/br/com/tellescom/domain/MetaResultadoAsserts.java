package br.com.tellescom.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class MetaResultadoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMetaResultadoAllPropertiesEquals(MetaResultado expected, MetaResultado actual) {
        assertMetaResultadoAutoGeneratedPropertiesEquals(expected, actual);
        assertMetaResultadoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMetaResultadoAllUpdatablePropertiesEquals(MetaResultado expected, MetaResultado actual) {
        assertMetaResultadoUpdatableFieldsEquals(expected, actual);
        assertMetaResultadoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMetaResultadoAutoGeneratedPropertiesEquals(MetaResultado expected, MetaResultado actual) {
        assertThat(expected)
            .as("Verify MetaResultado auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMetaResultadoUpdatableFieldsEquals(MetaResultado expected, MetaResultado actual) {
        assertThat(expected)
            .as("Verify MetaResultado relevant properties")
            .satisfies(e -> assertThat(e.getLancadoEm()).as("check lancadoEm").isEqualTo(actual.getLancadoEm()))
            .satisfies(e -> assertThat(e.getParcial()).as("check parcial").isEqualTo(actual.getParcial()))
            .satisfies(e -> assertThat(e.getMetaAtingida()).as("check metaAtingida").isEqualTo(actual.getMetaAtingida()))
            .satisfies(e -> assertThat(e.getPeriodo()).as("check periodo").isEqualTo(actual.getPeriodo()))
            .satisfies(e -> assertThat(e.getAvaliacao()).as("check avaliacao").isEqualTo(actual.getAvaliacao()))
            .satisfies(e -> assertThat(e.getAnalise()).as("check analise").isEqualTo(actual.getAnalise()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMetaResultadoUpdatableRelationshipsEquals(MetaResultado expected, MetaResultado actual) {
        assertThat(expected)
            .as("Verify MetaResultado relationships")
            .satisfies(e -> assertThat(e.getMeta()).as("check meta").isEqualTo(actual.getMeta()));
    }
}
