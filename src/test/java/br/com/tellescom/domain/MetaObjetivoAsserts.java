package br.com.tellescom.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class MetaObjetivoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMetaObjetivoAllPropertiesEquals(MetaObjetivo expected, MetaObjetivo actual) {
        assertMetaObjetivoAutoGeneratedPropertiesEquals(expected, actual);
        assertMetaObjetivoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMetaObjetivoAllUpdatablePropertiesEquals(MetaObjetivo expected, MetaObjetivo actual) {
        assertMetaObjetivoUpdatableFieldsEquals(expected, actual);
        assertMetaObjetivoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMetaObjetivoAutoGeneratedPropertiesEquals(MetaObjetivo expected, MetaObjetivo actual) {
        assertThat(expected)
            .as("Verify MetaObjetivo auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMetaObjetivoUpdatableFieldsEquals(MetaObjetivo expected, MetaObjetivo actual) {
        assertThat(expected)
            .as("Verify MetaObjetivo relevant properties")
            .satisfies(e -> assertThat(e.getPoliticaSGQ()).as("check politicaSGQ").isEqualTo(actual.getPoliticaSGQ()))
            .satisfies(e -> assertThat(e.getDesdobramentoSGQ()).as("check desdobramentoSGQ").isEqualTo(actual.getDesdobramentoSGQ()))
            .satisfies(e -> assertThat(e.getObjetivoSGQ()).as("check objetivoSGQ").isEqualTo(actual.getObjetivoSGQ()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMetaObjetivoUpdatableRelationshipsEquals(MetaObjetivo expected, MetaObjetivo actual) {}
}
