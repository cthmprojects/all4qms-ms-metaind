package br.com.tellescom.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class IndicadorMetaAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIndicadorMetaAllPropertiesEquals(IndicadorMeta expected, IndicadorMeta actual) {
        assertIndicadorMetaAutoGeneratedPropertiesEquals(expected, actual);
        assertIndicadorMetaAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIndicadorMetaAllUpdatablePropertiesEquals(IndicadorMeta expected, IndicadorMeta actual) {
        assertIndicadorMetaUpdatableFieldsEquals(expected, actual);
        assertIndicadorMetaUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIndicadorMetaAutoGeneratedPropertiesEquals(IndicadorMeta expected, IndicadorMeta actual) {
        assertThat(expected)
            .as("Verify IndicadorMeta auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIndicadorMetaUpdatableFieldsEquals(IndicadorMeta expected, IndicadorMeta actual) {
        assertThat(expected)
            .as("Verify IndicadorMeta relevant properties")
            .satisfies(e -> assertThat(e.getFrequencia()).as("check frequencia").isEqualTo(actual.getFrequencia()))
            .satisfies(e -> assertThat(e.getAnoIndicador()).as("check anoIndicador").isEqualTo(actual.getAnoIndicador()))
            .satisfies(e -> assertThat(e.getMeta01()).as("check meta01").isEqualTo(actual.getMeta01()))
            .satisfies(e -> assertThat(e.getMeta02()).as("check meta02").isEqualTo(actual.getMeta02()))
            .satisfies(e -> assertThat(e.getMeta03()).as("check meta03").isEqualTo(actual.getMeta03()))
            .satisfies(e -> assertThat(e.getMeta04()).as("check meta04").isEqualTo(actual.getMeta04()))
            .satisfies(e -> assertThat(e.getMeta05()).as("check meta05").isEqualTo(actual.getMeta05()))
            .satisfies(e -> assertThat(e.getMeta06()).as("check meta06").isEqualTo(actual.getMeta06()))
            .satisfies(e -> assertThat(e.getMeta07()).as("check meta07").isEqualTo(actual.getMeta07()))
            .satisfies(e -> assertThat(e.getMeta08()).as("check meta08").isEqualTo(actual.getMeta08()))
            .satisfies(e -> assertThat(e.getMeta09()).as("check meta09").isEqualTo(actual.getMeta09()))
            .satisfies(e -> assertThat(e.getMeta10()).as("check meta10").isEqualTo(actual.getMeta10()))
            .satisfies(e -> assertThat(e.getMeta11()).as("check meta11").isEqualTo(actual.getMeta11()))
            .satisfies(e -> assertThat(e.getMeta12()).as("check meta12").isEqualTo(actual.getMeta12()))
            .satisfies(e -> assertThat(e.getMedicao01()).as("check medicao01").isEqualTo(actual.getMedicao01()))
            .satisfies(e -> assertThat(e.getMedicao02()).as("check medicao02").isEqualTo(actual.getMedicao02()))
            .satisfies(e -> assertThat(e.getMedicao03()).as("check medicao03").isEqualTo(actual.getMedicao03()))
            .satisfies(e -> assertThat(e.getMedicao04()).as("check medicao04").isEqualTo(actual.getMedicao04()))
            .satisfies(e -> assertThat(e.getMedicao05()).as("check medicao05").isEqualTo(actual.getMedicao05()))
            .satisfies(e -> assertThat(e.getMedicao06()).as("check medicao06").isEqualTo(actual.getMedicao06()))
            .satisfies(e -> assertThat(e.getMedicao07()).as("check medicao07").isEqualTo(actual.getMedicao07()))
            .satisfies(e -> assertThat(e.getMedicao08()).as("check medicao08").isEqualTo(actual.getMedicao08()))
            .satisfies(e -> assertThat(e.getMedicao09()).as("check medicao09").isEqualTo(actual.getMedicao09()))
            .satisfies(e -> assertThat(e.getMedicao10()).as("check medicao10").isEqualTo(actual.getMedicao10()))
            .satisfies(e -> assertThat(e.getMedicao11()).as("check medicao11").isEqualTo(actual.getMedicao11()))
            .satisfies(e -> assertThat(e.getMedicao12()).as("check medicao12").isEqualTo(actual.getMedicao12()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIndicadorMetaUpdatableRelationshipsEquals(IndicadorMeta expected, IndicadorMeta actual) {
        assertThat(expected)
            .as("Verify IndicadorMeta relationships")
            .satisfies(e -> assertThat(e.getIndicador()).as("check indicador").isEqualTo(actual.getIndicador()));
    }
}
