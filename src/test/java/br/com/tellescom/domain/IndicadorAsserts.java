package br.com.tellescom.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class IndicadorAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIndicadorAllPropertiesEquals(Indicador expected, Indicador actual) {
        assertIndicadorAutoGeneratedPropertiesEquals(expected, actual);
        assertIndicadorAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIndicadorAllUpdatablePropertiesEquals(Indicador expected, Indicador actual) {
        assertIndicadorUpdatableFieldsEquals(expected, actual);
        assertIndicadorUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIndicadorAutoGeneratedPropertiesEquals(Indicador expected, Indicador actual) {
        assertThat(expected)
            .as("Verify Indicador auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIndicadorUpdatableFieldsEquals(Indicador expected, Indicador actual) {
        assertThat(expected)
            .as("Verify Indicador relevant properties")
            .satisfies(e -> assertThat(e.getCodigoIndicador()).as("check codigoIndicador").isEqualTo(actual.getCodigoIndicador()))
            .satisfies(e -> assertThat(e.getNomeIndicador()).as("check nomeIndicador").isEqualTo(actual.getNomeIndicador()))
            .satisfies(e -> assertThat(e.getDescricaoIndicador()).as("check descricaoIndicador").isEqualTo(actual.getDescricaoIndicador()))
            .satisfies(e -> assertThat(e.getUnidade()).as("check unidade").isEqualTo(actual.getUnidade()))
            .satisfies(e -> assertThat(e.getTendencia()).as("check tendencia").isEqualTo(actual.getTendencia()))
            .satisfies(e -> assertThat(e.getIdProcesso()).as("check idProcesso").isEqualTo(actual.getIdProcesso()))
            .satisfies(e -> assertThat(e.getIdMetaIndicador()).as("check idMetaIndicador").isEqualTo(actual.getIdMetaIndicador()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertIndicadorUpdatableRelationshipsEquals(Indicador expected, Indicador actual) {}
}
