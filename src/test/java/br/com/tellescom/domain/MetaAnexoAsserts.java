package br.com.tellescom.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class MetaAnexoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMetaAnexoAllPropertiesEquals(MetaAnexo expected, MetaAnexo actual) {
        assertMetaAnexoAutoGeneratedPropertiesEquals(expected, actual);
        assertMetaAnexoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMetaAnexoAllUpdatablePropertiesEquals(MetaAnexo expected, MetaAnexo actual) {
        assertMetaAnexoUpdatableFieldsEquals(expected, actual);
        assertMetaAnexoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMetaAnexoAutoGeneratedPropertiesEquals(MetaAnexo expected, MetaAnexo actual) {
        assertThat(expected)
            .as("Verify MetaAnexo auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMetaAnexoUpdatableFieldsEquals(MetaAnexo expected, MetaAnexo actual) {
        assertThat(expected)
            .as("Verify MetaAnexo relevant properties")
            .satisfies(e -> assertThat(e.getNomeFisico()).as("check nomeFisico").isEqualTo(actual.getNomeFisico()))
            .satisfies(e -> assertThat(e.getNomeOriginal()).as("check nomeOriginal").isEqualTo(actual.getNomeOriginal()))
            .satisfies(e -> assertThat(e.getExtensao()).as("check extensao").isEqualTo(actual.getExtensao()))
            .satisfies(e -> assertThat(e.getCaminho()).as("check caminho").isEqualTo(actual.getCaminho()))
            .satisfies(e -> assertThat(e.getDataCriacao()).as("check dataCriacao").isEqualTo(actual.getDataCriacao()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMetaAnexoUpdatableRelationshipsEquals(MetaAnexo expected, MetaAnexo actual) {
        assertThat(expected)
            .as("Verify MetaAnexo relationships")
            .satisfies(e -> assertThat(e.getMetaResultado()).as("check metaResultado").isEqualTo(actual.getMetaResultado()));
    }
}
